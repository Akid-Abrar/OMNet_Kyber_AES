//
// Generated file, do not edit! Created by nedtool 5.7 from messages.msg.
//

#ifndef __MESSAGES_M_H
#define __MESSAGES_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0507
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>messages.msg:2</tt> by nedtool.
 * <pre>
 * packet KyberMessage
 * {
 *     int msgType; // 0: public key, 1: ciphertext, 2: encrypted data
 *     char payload[];
 * }
 * </pre>
 */
class KyberMessage : public ::omnetpp::cPacket
{
  protected:
    int msgType;
    char *payload; // array ptr
    unsigned int payload_arraysize;

  private:
    void copy(const KyberMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const KyberMessage&);

  public:
    KyberMessage(const char *name=nullptr, short kind=0);
    KyberMessage(const KyberMessage& other);
    virtual ~KyberMessage();
    KyberMessage& operator=(const KyberMessage& other);
    virtual KyberMessage *dup() const override {return new KyberMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getMsgType() const;
    virtual void setMsgType(int msgType);
    virtual void setPayloadArraySize(unsigned int size);
    virtual unsigned int getPayloadArraySize() const;
    virtual char getPayload(unsigned int k) const;
    virtual void setPayload(unsigned int k, char payload);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const KyberMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, KyberMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __MESSAGES_M_H

